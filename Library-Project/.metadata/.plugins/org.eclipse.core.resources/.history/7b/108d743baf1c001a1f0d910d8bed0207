package com.ustglobals.librarymanagementsystem.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ustglobals.librarymanagementsystem.dto.BookBean;
import com.ustglobals.librarymanagementsystem.dto.BookRegestrationBean;
import com.ustglobals.librarymanagementsystem.dto.LibraryResponse;
import com.ustglobals.librarymanagementsystem.dto.UserBean;
import com.ustglobals.librarymanagementsystem.service.StudentService;
@CrossOrigin
@RestController
public class StudentController {
	
	@Autowired
	private StudentService service;
	
	@GetMapping(path="/student-login",produces = MediaType.APPLICATION_JSON_VALUE)
	public LibraryResponse loginStudent(@RequestParam("userID") int userID,
			@RequestParam("userPassword") String userPassword) {
		
		LibraryResponse response = new LibraryResponse();
		UserBean bean = service.loginStudent(userID, userPassword);
		if(bean!=null)
		{
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription(" student with id "+userID+" logined successfully");
		}
		else
		{

			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription(" student got failed to login");

		}
		return response;
		
	}
	
	@GetMapping(path="/get-allBooks",produces = MediaType.APPLICATION_JSON_VALUE)
	public LibraryResponse getAllBooks()
	{
		LibraryResponse response = new LibraryResponse();
		List<BookBean> beans = service.getAllBooks();
		if(!beans.isEmpty())
		{
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription(" Here is the List of Book");
			response.setBookBean(beans);
		}
		else
		{
			response.setStatusCode(401);
			response.setMessage("failure");
			response.setDescription("No Books  found in the library");
		}
		return response;	
	}
	
	@GetMapping(path="/get-book",produces = MediaType.APPLICATION_JSON_VALUE)
	public LibraryResponse searchBook(@RequestParam("bookTitle")String bookTitle)
	{

		LibraryResponse response = new LibraryResponse();
		BookBean bean = service.searchBook(bookTitle);
		if(bean!=null)
		{
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription(bookTitle+ " found in the library");
			response.setBookBean(Arrays.asList(bean));
		}
		else
		{
			response.setStatusCode(401);
			response.setMessage("failure");
			response.setDescription(bookTitle+" not found in the library");
		}
		return response;
	}
	
	
	@GetMapping(path="/request-book",produces = MediaType.APPLICATION_JSON_VALUE)
	public LibraryResponse requestBook( @RequestBody BookRegestrationBean bean)
	{
		LibraryResponse response = new LibraryResponse();
		boolean registerBean = service.requestBook(bean);
		if(bean!=null)
		{
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription( " found in the library");
			response.setBookRegestrationBean(Arrays.asList(bean));
		}
		else
		{
			response.setStatusCode(401);
			response.setMessage("failure");
			response.setDescription(" not found in the library");
		}
		return response;
	}



}
